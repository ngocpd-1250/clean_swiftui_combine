disabled_rules: # rule identifiers to exclude from running
  - trailing_whitespace
  - trailing_newline
  - xctfail_message
  - identifier_name
  - type_body_length
  - type_name
  - discouraged_optional_boolean
  - function_parameter_count
  - switch_case_alignment
  - void_function_in_ternary
  - attributes
  - let_var_whitespace
  - convenience_type
  - nesting
  - cyclomatic_complexity

opt_in_rules: # some rules are only opt-in
  - attributes
  - block_based_kvo
  - class_delegate_protocol
  - closing_brace
  - closure_end_indentation
  - closure_parameter_position
  - closure_spacing
  - colon
  - comma
  - compiler_protocol_init
  - contains_over_first_not_nil
  - control_statement
  - convenience_type
  - custom_rules
  - discarded_notification_center_observer
  - discouraged_direct_init
  - discouraged_optional_boolean
  - dynamic_inline
  - empty_count
  - empty_enum_arguments
  - empty_parameters
  - empty_parentheses_with_trailing_closure
  - empty_string
  - empty_xctest_method
  - explicit_init
  - fallthrough
  - fatal_error_message
  - first_where
  - for_where
  - force_cast
  - force_try
  - force_unwrapping
  - function_parameter_count
  - generic_type_name
  - implicit_getter
  - is_disjoint
  - joined_default_parameter
  - large_tuple
  - leading_whitespace
  - legacy_cggeometry_functions
  - legacy_constant
  - legacy_constructor
  - legacy_nsgeometry_functions
  - let_var_whitespace
  - line_length
  - literal_expression_end_indentation
  - lower_acl_than_parent
  - mark
  - modifier_order
  - multiline_arguments
  - multiline_function_chains
  - multiline_parameters
  - multiple_closures_with_trailing_closure
  - nimble_operator
  - no_fallthrough_only
  - notification_center_detachment
  - opening_brace
  - operator_usage_whitespace
  - operator_whitespace
  - overridden_super_call
  - override_in_extension
  - pattern_matching_keywords
  - prefixed_toplevel_constant
  - private_over_fileprivate
  - private_unit_test
  - prohibited_super_call
  - protocol_property_accessors_order
  - quick_discouraged_call
  - quick_discouraged_focused_test
  - quick_discouraged_pending_test
  - redundant_discardable_let
  - redundant_nil_coalescing
  - redundant_optional_initialization
  - redundant_set_access_control
  - redundant_string_enum_value
  - redundant_type_annotation
  - redundant_void_return
  - required_enum_case
  - return_arrow_whitespace
  - shorthand_operator
  - single_test_class
  - sorted_first_last
  - statement_position
  - superfluous_disable_command
  - switch_case_alignment
  - switch_case_on_newline
  - syntactic_sugar
  - todo
  - trailing_comma
  - trailing_newline
  - trailing_semicolon
  - trailing_whitespace
  - unavailable_function
  - unneeded_break_in_switch
  - untyped_error_in_catch
  - unused_closure_parameter
  - unused_enumerated
  - unused_optional_binding
  - valid_ibinspectable
  - vertical_parameter_alignment
  - vertical_parameter_alignment_on_call
  - vertical_whitespace
  - void_return
  - weak_delegate
  - yoda_condition
  # Find all the available rules by running:
  # swiftlint rules

included: # paths to include during linting. `--path` is ignored if present.
  - BaseSwiftUI
  - BaseSwiftUITests
excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Pods
  - BaseSwiftUI/R.generated.swift

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
force_cast: warning # implicitly. Give warning only for force casting

force_try:
  severity: warning # explicitly. Give warning only for force try

line_length:
  - 200 # warning
  - 400 # error

function_body_length:
  - 500 # warning
  - 1000 # error

# or they can set both explicitly
file_length:
  warning: 500
  error: 800

large_tuple: # warn user when using 3 values in tuple, give error if there are 4
   - 3
   - 4

reporter: "xcode"
